def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterMinSdkVersion = localProperties.getProperty('flutter.minSdkVersion')
if (flutterMinSdkVersion == null) {
    flutterMinSdkVersion = '20'
}

def flutterTargetSdkVersion = localProperties.getProperty('flutter.targetSdkVersion')
if (flutterTargetSdkVersion == null) {
    flutterTargetSdkVersion = '34'
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def flutterVersion = getFlutterVersion()

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    namespace "com.topmortar.topmortarseller"
    compileSdkVersion 34
    ndkVersion "27.0.0"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.topmortar.topmortarseller"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21
        targetSdkVersion 34
        versionCode flutterVersion.versionCode.toInteger()
        versionName flutterVersion.versionName
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    signingConfigs {
        release {
            storePassword 'topmortarseller'
            keyPassword 'topmortarseller'
            keyAlias 'release-keystore'
            storeFile file('E:/Pekerjaan/Flutter/topmortarseller/android/app/release-keystore.jks')
            // if (project.hasProperty('keystorePropertiesFile')) {
            //     def keystoreProperties = new Properties()
            //     def keystorePropertiesFile = rootProject.file(keystorePropertiesFile)
            //     keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
            //     storeFile = file(keystoreProperties['storeFile'])
            //     storePassword = keystoreProperties['storePassword']
            //     keyAlias = keystoreProperties['keyAlias']
            //     keyPassword = keystoreProperties['keyPassword']
            // }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

def getFlutterVersion() {
    def file = rootProject.file('../pubspec.yaml')
    def version = file.readLines().find { it.startsWith('version:') }?.split(' ')[1]
    def versionCode = version?.split('\\+')[-1]
    def versionName = version?.split('\\+')?.first()
    [versionCode: versionCode, versionName: versionName]
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
